#!/user/bin/env groovy
// For Global Shared Library: @Library('jenkins-shared-library@tag[optional]')

library identifier: 'jenkins-shared-library@master', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/foundry-vault/jenkins-shared-library.git',
    credentialsId: 'github-credentials'
])

def gv

pipeline {
    agent any
    tools {
        maven 'maven-3.9'
    }

    stages {

        stage('increment java app version') {
            steps {
                script {
                    echo '[LOG] Incrementing the application version'
                    sh "mvn build-helper:parse-version versions:set \
                        -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                        versions:commit"
                    def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                    def version = matcher[0][1]
                    env.IMAGE_NAME = "foundryvault/demo-app:$version-$BUILD_NUMBER"
                }
            }
        }

        stage("build jar") {
            steps {
               script {
                   echo "building the application..."
                   sh 'mvn clean package'
               }
            }
        }

        stage("build and push image") {
            steps {
                script {
                    echo "building the docker image..."
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                        sh "docker build -t ${IMAGE_NAME} ."
                        sh "echo $PASS | docker login -u $USER --password-stdin"
                        sh "docker push ${IMAGE_NAME}"
                    }
                }
            }
        }

        stage("deploy") {
            environment {
                AWS_ACCESS_KEY_ID = credentials('jenkins_aws_access_key_id')
                AWS_SECRET_ACCESS_KEY = credentials('jenkins_aws_secret_access_key')
                APP_NAME = 'java-maven-app'
            }
            steps {
                script {
                    echo 'deploying docker image...'
                    sh 'envsubst < kubernetes/deployment.yaml | kubectl apply -f -'
                    sh 'envsubst < kubernetes/service.yaml | kubectl apply -f -'
                }
            }

        }

        stage('commit version update') {
            steps {
                script {
                    echo '[LOG] Commiting the new pom.xml'
                    withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh 'git config --global user.email "jenkins@foundryvault.com"'
                        sh 'git config --global user.name "Jenkins"'                     
                        sh 'git status'
                        sh 'git branch'
                        sh 'git config --list'
                        echo '[LOG] adding remote'
                        sh "git remote set-url origin https://${USER}:${PASS}@gitlab.com/foundryvault/java-maven-app.git"
                        sh 'git add .'
                        sh 'git commit -m "[Jenkins] version increment in pom.xml"'
                        sh 'git push origin HEAD:master'
                    }
                }
            }
        }
    }
}